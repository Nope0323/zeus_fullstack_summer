import psycopg2
from psycopg2 import OperationalError

def connect_db():
    # PostgreSQL –º—ç–¥—ç—ç–ª–ª–∏–π–Ω —Å–∞–Ω—Ç–∞–π —Ö–æ–ª–±–æ–≥–¥–æ—Ö —Ñ—É–Ω–∫—Ü
    try:
        conn = psycopg2.connect(

#------------------------------------------------------------------------------------------------------------
	    # TODO
        # host, database, user, password —É—Ç–≥—É—É–¥—ã–≥ ”©”©—Ä–∏–π–Ω —Ç–æ—Ö–∏—Ä–≥–æ–æ–Ω–¥–æ–æ —Ç–∞–∞—Ä—É—É–ª–Ω–∞
        dbname = "student_db",
        user= "postgres",
        password= "",
        host= "localhost",
        port= "5432"
        )
#------------------------------------------------------------------------------------------------------------

        return conn
    except OperationalError as e:
        print(f"–•–æ–ª–±–æ–ª—Ç—ã–Ω –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: {e}")
        return None

def view_courses(conn):
    # –ë–æ–ª–æ–º–∂–∏—Ç —Ö–∏—á—ç—ç–ª“Ø“Ø–¥–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö —Ñ—É–Ω–∫—Ü
    try:
        cur = conn.cursor()
#------------------------------------------------------------------------------------------------------------

    # TODO
    # courses —Ö“Ø—Å–Ω—ç–≥—Ç—ç—ç—Å –±“Ø—Ö —Ö–∏—á—ç—ç–ª–∏–π–Ω id –±–æ–ª–æ–Ω –Ω—ç—Ä–∏–π–≥ –∞–≤–∞—Ö SQL query –±–∏—á–Ω—ç “Ø“Ø
        cur.execute(f"SELECT id, course_name FROM courses")
        courses = cur.fetchall() #courses —Ö—É–≤—å—Å–∞–≥—á –∑–∞—Ä–ª–∞–∂ cur —ç—ç—Ä –¥–∞–º–∂—É—É–ª–∂ sql - —ç—ç—Å —É—Ç–≥—É—É–¥—ã–≥ courses –¥ –æ–Ω–æ–æ–∂ –±–∞–π–Ω–∞–≤  
        print("\n--- –ë–æ–ª–æ–º–∂–∏—Ç —Ö–∏—á—ç—ç–ª“Ø“Ø–¥ ---")
#------------------------------------------------------------------------------------------------------------

        for course in courses: # courses vs code - –¥—ç—ç—Ä “Ø“Ø—Å–≥—ç–∂ –±–∞–π–≥–∞–∞ —Ö—É–≤—å—Å–∞–≥—á —é–º
            print(f".[{course[0]}]{course[1]}")
            #—è–∞–≥–∞–∞–¥ –≥—ç–¥–≥–∏–π–≥ –º—ç–¥—ç—Ö–≥“Ø–π—á {courses[]}—ç—Ö–Ω–∏–π —Ö–∞–∞–ª courses –∏–π—Ö –±–æ–ª –¥–æ—Ç—Ä–æ—Ö –Ω—å list —Ç”©—Ä–ª”©”©—Ä –æ—Ä–∂ –∏—Ä–∂ –±–∞–π–Ω–∞.
        print("-"*28)#—Ö–∞—Ä—Ö–∞–¥ –∑–æ—Ä–∏—É–ª—Å–∞–Ω —Ö—è–∑–≥–∞–∞–ª–∞–ª—Ç
        cur.close()
        return courses
    except Exception as e:
        print(f"–•–∏—á—ç—ç–ª —Ö–∞—Ä–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: {e}")
        return[]# —Ö–æ–æ—Å–æ–Ω —É—Ç–≥–∞ –±—É—Ü–∞–∞–∂ –±—É–π “Ø–π–ª–¥—ç–ª
    
def add_student(conn):
    courses = view_courses(conn)
    if not courses:
        print("–ù—ç–º—ç—Ö –±–æ–ª–æ–º–∂—Ç–æ–π —Ö–∏—á—ç—ç–ª –æ–ª–¥—Å–æ–Ω–≥“Ø–π. –≠—Ö–ª—ç—ç–¥ —Ö–∏—á—ç—ç–ª –Ω—ç–º–Ω—ç “Ø“Ø.")
        return
    try:
        ovog_ner = input("–û—é—É—Ç–Ω—ã –æ–≤–æ–≥ –Ω—ç—Ä–∏–π–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ")
        email = input("–ò-–º—ç–π–ª —Ö–∞—è–≥–∏–π–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ")
        utas = input("–£—Ç–∞—Å–Ω—ã –¥—É–≥–∞–∞—Ä—ã–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ")

        while True:
            course_id = input("–•–∏—á—ç—ç–ª–∏–π–Ω ID-–∏–π–≥ —Å–æ–Ω–≥–æ–Ω–æ —É—É:")
            if course_id.isdigit() and any(int(course_id) == c[0] for c in courses):
            #isdigit —Ö—ç—Ä—ç–≤ —è–º–∞—Ä –Ω—ç–≥ —Ç–æ–æ –±–∞–π–≤–∞–ª –±—É—Ü–∞–∞–Ω–∞
                break
            else:
                print("–ë—É—Ä—É—É ID –±–∞–π–Ω–∞. –î—ç—ç—Ä—Ö –∂–∞–≥—Å–∞–∞–ª—Ç–∞–∞—Å —Å–æ–Ω–≥–æ–Ω–æ —É—É.")
        cur = conn.cursor()
        
#------------------------------------------------------------------------------------------------------------
	# TODO
        # students —Ö“Ø—Å–Ω—ç–≥—Ç—ç–¥ —à–∏–Ω—ç –æ—é—É—Ç–Ω—ã –º—ç–¥—ç—ç–ª–ª–∏–π–≥ –æ—Ä—É—É–ª–∞—Ö SQL query –±–∏—á–Ω—ç “Ø“Ø
        sql_insert = "INSERT INTO actor (ovog_ner,email, utas) VALUES(%s,%s,%s)"
        cur.execute(sql_insert,(ovog_ner,email, utas))
        conn.commit()
#------------------------------------------------------------------------------------------------------------
     
        print(f"'{ovog_ner}' –∞–º–∂–∏–ª—Ç—Ç–∞–π –±“Ø—Ä—Ç–≥—ç–≥–¥–ª—ç—ç.")
        cur.close()
    except Exception as e:
        print(f"–û—é—É—Ç–∞–Ω –Ω—ç–º—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: {e}")
        conn.rollback()

def view_students_with_courses(conn):
# –ë“Ø—Ö –æ—é—É—Ç–Ω—ã–≥ —Ö–∏—á—ç—ç–ª–∏–π–Ω—Ö –Ω—å –Ω—ç—Ä—Ç—ç–π —Ö–∞–º—Ç —Ö–∞—Ä–∞—Ö (JOIN –∞—à–∏–≥–ª–∞–Ω)
    try:
        cur = conn.cursor()
    
#------------------------------------------------------------------------------------------------------------
  # TODO
        # students –±–æ–ª–æ–Ω courses —Ö“Ø—Å–Ω—ç–≥—Ç“Ø“Ø–¥–∏–π–≥ LEFT JOIN –∞—à–∏–≥–ª–∞–Ω —Ö–æ–ª–±–æ–∂,
        # –æ—é—É—Ç–Ω—ã id, –æ–≤–æ–≥_–Ω–µ—Ä, email, course_name-–≥ –∞–≤–∞—Ö SQL query –±–∏—á–Ω—ç “Ø“Ø
        sql_insert01 = "SELECT s.ovog_ner, s.email, s.utas, c.course_name FROM students s LEFT JOIN courses c ON s.course_id = c.id order by s.id"
        cur.execute(sql_insert01)
        rows = cur.fetchall()
        if not rows:
            print("–ë“Ø—Ä—Ç–≥—ç–ª—Ç—ç–π –æ—é—É—Ç–∞–Ω –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞.")
            return
#------------------------------------------------------------------------------------------------------------
        print("\n--- –û—é—É—Ç–Ω—É—É–¥ –±–∞ –¢—ç–¥–Ω–∏–π –•–∏—á—ç—ç–ª“Ø“Ø–¥ ---")
        print(f"{'ID':<5} {'–û–≤–æ–≥ –Ω—ç—Ä':<25} {'–ò-–º—ç–π–ª':<30} {'–•–∏—á—ç—ç–ª':<30}")
        print("-" * 95)
        for row in rows:
             course_name = row[3] if row[3] else "–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π"
             print(f"{row[0]:<5} {row[1]:<25} {row[2]:<30} {course_name:<30}")
             print("-" * 95)
             cur.close()
    except Exception as e:
        print(f"–ú—ç–¥—ç—ç–ª—ç–ª —Ö–∞—Ä–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: {e}")
        
def main():
            # –ü—Ä–æ–≥—Ä–∞–º—ã–Ω “Ø–Ω–¥—Å—ç–Ω —Ü—ç—Å
    conn = connect_db()
    if conn is None:
        return
    while True:
        print("\n===== –û—é—É—Ç–∞–Ω & –•–∏—á—ç—ç–ª–∏–π–Ω –ë“Ø—Ä—Ç–≥—ç–ª–∏–π–Ω –°–∏—Å—Ç–µ–º =====")
        print("1. –®–∏–Ω—ç –æ—é—É—Ç–∞–Ω –Ω—ç–º—ç—Ö")
        print("2. –û—é—É—Ç–Ω—É—É–¥—ã–≥ —Ö–∏—á—ç—ç–ª—Ç—ç–π –Ω—å —Ö–∞—Ä–∞—Ö")
        print("3. –ì–∞—Ä–∞—Ö")
        choice = input("–°–æ–Ω–≥–æ–ª—Ç–æ–æ –æ—Ä—É—É–ª–Ω–∞ —É—É (1-3): ")
        if choice == '1':
#------------------------------------------------------------------------------------------------------------
            # TODO
            # –æ—é—É—Ç–∞–Ω –Ω—ç–º—ç—Ö “Ø–π–ª–¥–ª–∏–π–≥ –≥“Ø–π—Ü—ç—Ç–≥—ç–Ω—ç “Ø“Ø
            add_student(conn)
#------------------------------------------------------------------------------------------------------------
            
        elif choice == '2':
#------------------------------------------------------------------------------------------------------------
            # TODO
            # –æ—é—É—Ç–Ω—É—É–¥—ã–≥ —Ö–∏—á—ç—ç–ª—Ç—ç–π –Ω—å —Ö–∞—Ä–∞—Ö “Ø–π–ª–¥–ª–∏–π–≥ –≥“Ø–π—Ü—ç—Ç–≥—ç–Ω—ç “Ø“Ø
            view_students_with_courses(conn)
#------------------------------------------------------------------------------------------------------------
        
        elif choice == '3':
            print("üëã –ü—Ä–æ–≥—Ä–∞–º–∞–∞—Å –≥–∞—Ä–ª–∞–∞.")
            break
        else:
            print("–ë—É—Ä—É—É —Å–æ–Ω–≥–æ–ª—Ç. 1-3 —Ö–æ–æ—Ä–æ–Ω–¥ —Å–æ–Ω–≥–æ–Ω–æ —É—É.")
    if conn:
        conn.close()


if __name__ == "__main__":
    main()